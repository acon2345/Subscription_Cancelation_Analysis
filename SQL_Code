--The query below gives some descpritive statistics on how many subscriptions and cancelations are present and that percent are canceling

select
    count(distinct subs.subscription_id) as num_subs,
    count(distinct cans.subscription_id) as num_cancelations,
    num_cancelations / num_subs * 100 as perc_subs_canceling
from
    public.subscriptions subs
left join
    public.cancelations cans
    on subs.subscription_id = cans.subscription_id


--The query below gives us a count of how many selected each reason for their required reason using a window function
--Also shows the percent of the total amount

select
    cancelation_reason1,
    count(*) as num_instances,
    count(distinct subscription_id) as num_subs,
    sum(num_subs) over() as total_subs,
    num_subs / total_subs * 100 as perc_of_total_subs
from
    cancelations
group by
    1


--The query below showcases the use of a view and unions to create data used for further research of the reason, reason number, date and subscriber

create or replace view junk.all_cancelation_reasons_ac as
select
    subscription_id,
    cancel_date,
    cancelation_reason1 as cancelation_reason,
    1 as reason_number
from
    public.cancelations

union

select
    subscription_id,
    cancel_date,
    cancelation_reason2 as cancelation_reason,
    2 as reason_number
from
    public.cancelations

union

select
    subscription_id,
    cancel_date,
    cancelation_reason3 as cancelation_reason,
    3 as reason_number
from
    public.cancelations
;

select
    *
from
    junk.all_cancelation_reasons_ac

--The below shows the use of views, CTEs and window functions to research the number of subscriptions per reason year over year
--Helps to present a change over time

with yearly as(
select
    date_trunc('year', cancel_date::date) as cancel_year,
    cancelation_reason,
    count(*) as num_reason
from
    junk.all_cancelation_reasons_ac
group by
    1,2
)
select
    cancel_year,
    cancelation_reason,
    num_reason,
    sum(num_reason) over(partition by cancel_year) as year_total,
    num_reason * 100/ year_total as perc_reason_annual
from
    yearly
